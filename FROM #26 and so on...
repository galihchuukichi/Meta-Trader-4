//+------------------------------------------------------------------+
//|                                          #26 Global Variable.mq4 |
//|                                  Copyright 2024, MetaQuotes Ltd. |
//|                                             https://www.mql5.com |
//+------------------------------------------------------------------+
#property copyright "Copyright 2024, MetaQuotes Ltd."
#property link      "https://www.mql5.com"
#property version   "1.00"
#property strict
//+------------------------------------------------------------------+
//| Script program start function                                    |
//+------------------------------------------------------------------+

double stopLossPrice, takeProfitPrice;
int stopLossPoints = 50, takeProfitPoints = 50;

void OnStart()
  {
//---
   printStopLossPoints();
   
  }
//+------------------------------------------------------------------+

void printStopLossPoints(){
   Alert(stopLossPoints);
}





//+------------------------------------------------------------------+
//|                                   #27 INPUT EXTERN Variables.mq4 |
//|                                  Copyright 2024, MetaQuotes Ltd. |
//|                                             https://www.mql5.com |
//+------------------------------------------------------------------+
#property copyright "Copyright 2024, MetaQuotes Ltd."
#property link      "https://www.mql5.com"
#property version   "1.00"
#property strict
#property show_inputs

//+------------------------------------------------------------------+
//| Script program start function                                    |
//+------------------------------------------------------------------+

// CAN'T CHANGE INSIDE CODE
input int stopLossPoints; // SL in Points
// ABLE TO CHANGE INSIDE CODE
extern int takeProfitPoints; // TP in Points

void OnStart()
  {
//---
  Alert("");
  // ERROR IF
  // stopLossPoints++;
  Alert("INPUT stopLossPoints: " + stopLossPoints);
  // NOT ERROR
  takeProfitPoints++;
  Alert("EXTERN takeProfitPoints: " + takeProfitPoints);
  
  

  
  }
//+------------------------------------------------------------------+

//+------------------------------------------------------------------+
//|                                                   #28 Arrays.mq4 |
//|                                  Copyright 2024, MetaQuotes Ltd. |
//|                                             https://www.mql5.com |
//+------------------------------------------------------------------+
#property copyright "Copyright 2024, MetaQuotes Ltd."
#property link      "https://www.mql5.com"
#property version   "1.00"
#property strict
//+------------------------------------------------------------------+
//| Script program start function                                    |
//+------------------------------------------------------------------+
void OnStart()
  {
//---
   int listOfStopLossPoints[3] = {100,200,300};
   string namaHari[7] = {"Sunday", "Monday", "Tuesday", "Wednesday", "Thursday", "Friday", "Saturday"};
   int minPointsLevel[2][3] = {20,30,40, 120,130,140};
   int dayNow = DayOfWeek();
   Alert("");
   
/*
   Alert("SL ke-3: "+listOfStopLossPoints[2]);
   Alert("Today is: "+namaHari[dayNow]);
   Alert("tester: "+minPointsLevel[1][1]);
*/

   Alert(Time[0] + "   " + Open[0] + "   " + High[0] + "   " + Low[0] + "   " + Close[0] + "   " + Volume[0]);
   Alert(Time[1] + "   " + Open[1] + "   " + High[1] + "   " + Low[1] + "   " + Close[1] + "   " + Volume[1]);
 
  }
//+------------------------------------------------------------------+

//+------------------------------------------------------------------+
//|                                                #29 For Loops.mq4 |
//|                                  Copyright 2024, MetaQuotes Ltd. |
//|                                             https://www.mql5.com |
//+------------------------------------------------------------------+
#property copyright "Copyright 2024, MetaQuotes Ltd."
#property link      "https://www.mql5.com"
#property version   "1.00"
#property strict
//+------------------------------------------------------------------+
//| Script program start function                                    |
//+------------------------------------------------------------------+
void OnStart()
  {
  //---
  Alert("");
  for(int i=0; i<=3; i++){
   Alert(Time[i]+" "+Open[i]+" "+High[i]+" "+Low[i]+" "+Close[i]+" "+Volume[i]);
  } 
  Alert(Bars);
  
  Alert("Loop finished");
   
  }
//+------------------------------------------------------------------+

//+------------------------------------------------------------------+
//|                                              #30 While Loops.mq4 |
//|                                  Copyright 2024, MetaQuotes Ltd. |
//|                                             https://www.mql5.com |
//+------------------------------------------------------------------+
#property copyright "Copyright 2024, MetaQuotes Ltd."
#property link      "https://www.mql5.com"
#property version   "1.00"
#property strict
//+------------------------------------------------------------------+
//| Script program start function                                    |
//+------------------------------------------------------------------+
void OnStart()
  {
//---
// /*
   Alert("hai");
   bool isInPosition = false;
   int i=0;
   while(!isInPosition){
      Alert("Close["+i+"]: "+Close[i]);
      if(Close[i]>2030){
         Alert("Entering a trade. Exit While Loops");
         isInPosition = true;
      }
      i++;
   }
//  */
  
/*
  Alert("");
  for(int i=0; i<Bars; i++){
      Alert("Close["+i+"]: "+Close[i]);
      if(Close[i]>2030){
         Alert("Entering a trade. Exit While Loops");
         break;
      }      
  } 
*/ 
   
  
   
  }
//+------------------------------------------------------------------+



//+------------------------------------------------------------------+
//|                                           #31 Enums Datatype.mq4 |
//|                                  Copyright 2024, MetaQuotes Ltd. |
//|                                             https://www.mql5.com |
//+------------------------------------------------------------------+
#property copyright "Copyright 2024, MetaQuotes Ltd."
#property link      "https://www.mql5.com"
#property version   "1.00"
#property strict
#property show_inputs
//+------------------------------------------------------------------+
//| Script program start function                                    |
//+------------------------------------------------------------------+

enum ENUM_TRADING_METHOD {
   Passive, Normal, Aggresive
};

input ENUM_TRADING_METHOD metode = Normal; // METODE

void OnStart()
  {
//---
   Alert("");
   if(metode == Passive){
      Alert("Metode Now: Passive");
   } else if(metode == Normal){
      Alert("Metode Now: Normal");
   } else if(metode == Aggresive){
      Alert("Metode Now: Aggresive");
   } else {
      Alert("INVALID");
   }  
   
  }
//+------------------------------------------------------------------+


//+------------------------------------------------------------------+
//|                                           #32 Moving Average.mq4 |
//|                                  Copyright 2024, MetaQuotes Ltd. |
//|                                             https://www.mql5.com |
//+------------------------------------------------------------------+
#property copyright "Copyright 2024, MetaQuotes Ltd."
#property link      "https://www.mql5.com"
#property version   "1.00"
#property strict
//+------------------------------------------------------------------+
//| Script program start function                                    |
//+------------------------------------------------------------------+

int maPeriod = 20;

void OnStart()
  {
//---
   
   double maValue = iMA(NULL,PERIOD_CURRENT,maPeriod,-1,MODE_SMA,PRICE_CLOSE,1);
   Alert("");
   Alert("maValue: "+ NormalizeDouble(maValue,Digits));
  }
//+------------------------------------------------------------------+



//+------------------------------------------------------------------+
//|                                          #33 Bollinger Bands.mq4 |
//|                                  Copyright 2024, MetaQuotes Ltd. |
//|                                             https://www.mql5.com |
//+------------------------------------------------------------------+
#property copyright "Copyright 2024, MetaQuotes Ltd."
#property link      "https://www.mql5.com"
#property version   "1.00"
#property strict
//+------------------------------------------------------------------+
//| Script program start function                                    |
//+------------------------------------------------------------------+

int bbPeriod = 20, bbStdDeviation = 2;
void OnStart()
  {
//---
   double bbUpperBand   = iBands(NULL,PERIOD_CURRENT,bbPeriod,bbStdDeviation,1,PRICE_CLOSE,MODE_UPPER,0);
   double bbMainBand    = iBands(NULL,PERIOD_CURRENT,bbPeriod,bbStdDeviation,1,PRICE_CLOSE,MODE_MAIN,0);
   double bbLowerBand   = iBands(NULL,PERIOD_CURRENT,bbPeriod,bbStdDeviation,1,PRICE_CLOSE,MODE_LOWER,0);
   
   bbUpperBand = NormalizeDouble(bbUpperBand,Digits);
   bbMainBand = NormalizeDouble(bbMainBand,Digits);
   bbLowerBand = NormalizeDouble(bbLowerBand,Digits);
   
   Print("bbUpperBand: "+bbUpperBand);
   Print("bbMainBand: "+bbMainBand);
   Print("bbLowerBand: "+bbLowerBand);
   
  }
//+------------------------------------------------------------------+


//+------------------------------------------------------------------+
//|                                                      #34 RSI.mq4 |
//|                                  Copyright 2024, MetaQuotes Ltd. |
//|                                             https://www.mql5.com |
//+------------------------------------------------------------------+
#property copyright "Copyright 2024, MetaQuotes Ltd."
#property link      "https://www.mql5.com"
#property version   "1.00"
#property strict
//+------------------------------------------------------------------+
//| Script program start function                                    |
//+------------------------------------------------------------------+

int rsiPeriod = 20;
void OnStart()
  {
//---
   // double rsiValue = iRSI(NULL,PERIOD_CURRENT,rsiPeriod,PRICE_CLOSE,0);
   double rsiCurrentValue  = iRSI(NULL,PERIOD_CURRENT,rsiPeriod,PRICE_CLOSE,0);
   double rsiPreviousValue = iRSI(NULL,PERIOD_CURRENT,rsiPeriod,PRICE_CLOSE,1);
   
   if(rsiCurrentValue > 30 && rsiPreviousValue < 30){
      Alert("BUY now");
   }
   
   
   
  }
//+------------------------------------------------------------------+

//+------------------------------------------------------------------+
//|                                              #35 Assignments.mq4 |
//|                                  Copyright 2024, MetaQuotes Ltd. |
//|                                             https://www.mql5.com |
//+------------------------------------------------------------------+
#property copyright "Copyright 2024, MetaQuotes Ltd."
#property link      "https://www.mql5.com"
#property version   "1.00"
#property strict
//+------------------------------------------------------------------+
//| Script program start function                                    |
//+------------------------------------------------------------------+
int bbPeriod = 20;



void OnStart()
  {
//---
double bbValueUpperSD4 = iBands(NULL,PERIOD_CURRENT,bbPeriod,4,0,PRICE_CLOSE,MODE_UPPER,0);
double bbValueUpperSD1 = iBands(NULL,PERIOD_CURRENT,bbPeriod,1,0,PRICE_CLOSE,MODE_UPPER,0);
double bbValueMiddle = iBands(NULL,PERIOD_CURRENT,bbPeriod,4,0,PRICE_CLOSE,MODE_MAIN,0);
double bbValueLowerSD1 = iBands(NULL,PERIOD_CURRENT,bbPeriod,1,0,PRICE_CLOSE,MODE_LOWER,0);
double bbValueLowerSD4 = iBands(NULL,PERIOD_CURRENT,bbPeriod,4,0,PRICE_CLOSE,MODE_LOWER,0);

bbValueUpperSD4 = NormalizeDouble(bbValueUpperSD4,Digits);
bbValueUpperSD1 = NormalizeDouble(bbValueUpperSD1,Digits);
bbValueMiddle = NormalizeDouble(bbValueMiddle,Digits);
bbValueLowerSD1 = NormalizeDouble(bbValueLowerSD1,Digits);
bbValueLowerSD4 = NormalizeDouble(bbValueLowerSD4,Digits);

   Alert("");
   if(Ask < bbValueLowerSD1)//buying
   {
      Alert("Price is bellow bbValueLowerSD1, Sending buy order");
      double stopLossPrice = bbValueLowerSD4;
      double takeProfitPrice = bbValueMiddle;
      Alert("Entry Price = " + Ask);
      Alert("Stop Loss Price = " + stopLossPrice);
      Alert("Take Profit Price = " + takeProfitPrice);
      
      //Send buy order
   }
   else if(Bid > bbValueUpperSD1)//shorting
   {
      Alert("Price is above bbValueUpperSD1, Sending short order");
      double stopLossPrice = bbValueUpperSD4;
      double takeProfitPrice = bbValueMiddle;
      Alert("Entry Price = " + Bid);
      Alert("Stop Loss Price = " + stopLossPrice);
      Alert("Take Profit Price = " + takeProfitPrice);
	  
	  //Send short order
  
  }
//+------------------------------------------------------------------+
   }
   

//+------------------------------------------------------------------+
//|                           #36 Assignment Answer from Teacher.mq4 |
//|                                  Copyright 2024, MetaQuotes Ltd. |
//|                                             https://www.mql5.com |
//+------------------------------------------------------------------+
#property copyright "Copyright 2024, MetaQuotes Ltd."
#property link      "https://www.mql5.com"
#property version   "1.00"
#property strict
//+------------------------------------------------------------------+
//| Script program start function                                    |
//+------------------------------------------------------------------+

int bbPeriod = 20;
int band1Std = 1;
int band2Std = 4;
//+------------------------------------------------------------------+
//| Script program start function                                    |
//+------------------------------------------------------------------+
void OnStart()
  {
//---
    Alert("");

   double bbLower1 = iBands(NULL,0,bbPeriod,band1Std,0,PRICE_CLOSE,MODE_LOWER,0);
   double bbUpper1 = iBands(NULL,0,bbPeriod,band1Std,0,PRICE_CLOSE,MODE_UPPER,0);
   double bbMid = iBands(NULL,0,bbPeriod,band1Std,0,PRICE_CLOSE,0,0);
   
   double bbLower2 = iBands(NULL,0,bbPeriod,band2Std,0,PRICE_CLOSE,MODE_LOWER,0);
   double bbUpper2 = iBands(NULL,0,bbPeriod,band2Std,0,PRICE_CLOSE,MODE_UPPER,0);
   
   if(Ask < bbLower1)//buying
   {
      Alert("Price is bellow bbLower1, Sending buy order");
      double stopLossPrice = NormalizeDouble(bbLower2,Digits);
      double takeProfitPrice = NormalizeDouble(bbMid,Digits);;
      Alert("Entry Price = " + Ask);
      Alert("Stop Loss Price = " + stopLossPrice);
      Alert("Take Profit Price = " + takeProfitPrice);
      
      //Send buy order
   }
   else if(Bid > bbUpper1)//shorting
   {
      Alert("Price is above bbUpper1, Sending short order");
      double stopLossPrice = NormalizeDouble(bbUpper2,Digits);
      double takeProfitPrice = NormalizeDouble(bbMid,Digits);
      Alert("Entry Price = " + Bid);
      Alert("Stop Loss Price = " + stopLossPrice);
      Alert("Take Profit Price = " + takeProfitPrice);
	  
	  //Send short order
   }
   

  }
//+------------------------------------------------------------------+

//+------------------------------------------------------------------+
//|                             #37 38 Pre Orders Sending Checks.mq4 |
//|                                  Copyright 2024, MetaQuotes Ltd. |
//|                                             https://www.mql5.com |
//+------------------------------------------------------------------+
#property copyright "Copyright 2024, MetaQuotes Ltd."
#property link      "https://www.mql5.com"
#property version   "1.00"
#property strict
#include <Sec.All Amazing Function.mqh>
//+------------------------------------------------------------------+
//| Script program start function                                    |
//+------------------------------------------------------------------+
void OnStart()
  {
//---
//--- #37 Just recall to social media

   Alert("");
   //Alert(IsTradeAllowed()); // Function 1
   //Alert(IsTradeAllowed(NULL,TimeCurrent())); // Function 2
   
   if(isTradingAllowed()){
      Alert("Doing some trades");
   }

   
  }
//+------------------------------------------------------------------+

/*
bool isTradingAllowed(){
   
   if(!IsTradeAllowed()){
      Alert("Trading isn't allowed. CHECK the AUTOTRADE!");
      return 0;
   }
   
   if(!IsTradeAllowed(Symbol(),TimeCurrent())){
      Alert("Trading is not available at the current symbol and specific time.");
      return 0;
   }   
   return 1;
}

*/

//+------------------------------------------------------------------+
//|                                #39 Checking Account Lot Size.mq4 |
//|                                  Copyright 2024, MetaQuotes Ltd. |
//|                                             https://www.mql5.com |
//+------------------------------------------------------------------+
#property copyright "Copyright 2024, MetaQuotes Ltd."
#property link      "https://www.mql5.com"
#property version   "1.00"
#property strict
//+------------------------------------------------------------------+
//| Script program start function                                    |
//+------------------------------------------------------------------+
void OnStart()
  {
//---
    Alert("");
    Alert(SymbolInfoDouble(NULL,SYMBOL_TRADE_CONTRACT_SIZE));
    Alert(MarketInfo(NULL,MODE_MINLOT));
        
  }
//+------------------------------------------------------------------+


//+------------------------------------------------------------------+
//|                                           #40 Sending Orders.mq4 |
//|                                  Copyright 2024, MetaQuotes Ltd. |
//|                                             https://www.mql5.com |
//+------------------------------------------------------------------+
#property copyright "Copyright 2024, MetaQuotes Ltd."
#property link      "https://www.mql5.com"
#property version   "1.00"
#property strict
#include <Sec.All Amazing Function.mqh>
//+------------------------------------------------------------------+
//| Script program start function                                    |
//+------------------------------------------------------------------+
void OnStart()
  {
//---
   Alert("");
   int OrderID=0;
   double minimumLot = MarketInfo(NULL,MODE_MINLOT);
   Alert("min. Lot: "+MarketInfo(NULL,MODE_MINLOT));
   
   if(isTradingAllowed()){
      OrderID = OrderSend(NULL,OP_BUYLIMIT,minimumLot,2026.30,10,2024.30,2028.30);
   }
   // SLIPPAGE based on points
   Alert("Order ID: "+OrderID);
   if(OrderID < 0){
      Alert("YOUR TRADE IS FAILED");
   }
   
  }
//+------------------------------------------------------------------+

//+------------------------------------------------------------------+
//|                                              #41 Assignments.mq4 |
//|                                  Copyright 2024, MetaQuotes Ltd. |
//|                                             https://www.mql5.com |
//+------------------------------------------------------------------+
#property copyright "Copyright 2024, MetaQuotes Ltd."
#property link      "https://www.mql5.com"
#property version   "1.00"
#property strict
//+------------------------------------------------------------------+
//| Script program start function                                    |
//+------------------------------------------------------------------+

int bbPeriod = 20;
int band1Std = 1;
int band2Std = 4;
double minimumLot = MarketInfo(NULL,MODE_MINLOT);
//+------------------------------------------------------------------+
//| Script program start function                                    |
//+------------------------------------------------------------------+
void OnStart()
  {
//---
    Alert("");

   double bbLower1 = iBands(NULL,0,bbPeriod,band1Std,0,PRICE_CLOSE,MODE_LOWER,0);
   double bbUpper1 = iBands(NULL,0,bbPeriod,band1Std,0,PRICE_CLOSE,MODE_UPPER,0);
   double bbMid = iBands(NULL,0,bbPeriod,band1Std,0,PRICE_CLOSE,0,0);
   
   double bbLower2 = iBands(NULL,0,bbPeriod,band2Std,0,PRICE_CLOSE,MODE_LOWER,0);
   double bbUpper2 = iBands(NULL,0,bbPeriod,band2Std,0,PRICE_CLOSE,MODE_UPPER,0);
   
   if(Ask < bbLower1)//buying
   {
      Alert("Price is bellow bbLower1, Sending buy order");
      double stopLossPrice = NormalizeDouble(bbLower2,Digits);
      double takeProfitPrice = NormalizeDouble(bbMid,Digits);;
      Alert("Entry Price = " + bbLower1);
      Alert("Stop Loss Price = " + stopLossPrice);
      Alert("Take Profit Price = " + takeProfitPrice);
      
      //Send buy order
      int OrderID = OrderSend(NULL,OP_BUYLIMIT,minimumLot,bbLower1,10,stopLossPrice,takeProfitPrice);   
      checkTradeSuccess(OrderID);
   }
   else if(Bid > bbUpper1)//shorting
   {
      Alert("Price is above bbUpper1, Sending short order");
      double stopLossPrice = NormalizeDouble(bbUpper2,Digits);
      double takeProfitPrice = NormalizeDouble(bbMid,Digits);
      Alert("Entry Price = " + bbUpper1);
      Alert("Stop Loss Price = " + stopLossPrice);
      Alert("Take Profit Price = " + takeProfitPrice);
	  
	  //Send short order
	  int OrderID = OrderSend(NULL,OP_SELLLIMIT,minimumLot,bbUpper1,10,stopLossPrice,takeProfitPrice);
	  checkTradeSuccess(OrderID);
   }
   

  }
//+------------------------------------------------------------------+


void checkTradeSuccess(int myOrderID){
   if(myOrderID<0){
      Alert("Trade FAILED");
   } else {
      Alert("TRADE SUCCESS :)");
   }
}

//+------------------------------------------------------------------+
//|                                          #42 Error Handlings.mq4 |
//|                                  Copyright 2024, MetaQuotes Ltd. |
//|                                             https://www.mql5.com |
//+------------------------------------------------------------------+
#property copyright "Copyright 2024, MetaQuotes Ltd."
#property link      "https://www.mql5.com"
#property version   "1.00"
#property strict
//+------------------------------------------------------------------+
//| Script program start function                                    |
//+------------------------------------------------------------------+
void OnStart()
  {
//---
   Alert("");
   Alert(MarketInfo(NULL,MODE_STOPLEVEL));
   Alert("Min. Lot req. : " + MarketInfo(NULL,MODE_MINLOT));
   Alert("Max. Lot req. : " + MarketInfo(NULL,MODE_MAXLOT));
   int orderID = OrderSend(NULL,OP_BUY,0.1,Ask,10,2500,2300);
   
   if(orderID < 0){
      Alert("Order FAILED bcs: "+GetLastError());
   } else {
      Alert("order sent :)");
   }
//+------------------------------------------------------------------+



// NOTE PENTING
// SLIPPAGE BERPENGARUH PADA MODE_STOPLEVEL, SO BE CAREFULL!!!

// ANOTHER NOTE PENTING
// MINLOT: 23
// IDK WHY but maybe pengaruh ke min. 200 points trus ada slippage? 
// atau minlot nya dalam 0.023
// 23 in minlot MEANS CODE FOR COMPUTER TO KNOW THAT 23 = MINLOT
// WARNING WHEN Alert("minlot: "+MODE_MINLOT);


}


//+------------------------------------------------------------------+
//|                                        #43 Assignment Answer.mq4 |
//|                                  Copyright 2024, MetaQuotes Ltd. |
//|                                             https://www.mql5.com |
//+------------------------------------------------------------------+
#property copyright "Copyright 2024, MetaQuotes Ltd."
#property link      "https://www.mql5.com"
#property version   "1.00"
#property strict


#include <CustomFunctions01.mqh>

int bbPeriod = 20;
int band1Std = 1;
int band2Std = 4;
//+------------------------------------------------------------------+
//| Script program start function                                    |
//+------------------------------------------------------------------+
void OnStart()
  {
//---

    Alert("");

   double bbLower1 = iBands(NULL,0,bbPeriod,band1Std,0,PRICE_CLOSE,MODE_LOWER,0);
   double bbUpper1 = iBands(NULL,0,bbPeriod,band1Std,0,PRICE_CLOSE,MODE_UPPER,0);
   double bbMid = iBands(NULL,0,bbPeriod,band1Std,0,PRICE_CLOSE,0,0);
   
   double bbLower2 = iBands(NULL,0,bbPeriod,band2Std,0,PRICE_CLOSE,MODE_LOWER,0);
   double bbUpper2 = iBands(NULL,0,bbPeriod,band2Std,0,PRICE_CLOSE,MODE_UPPER,0);
   
   if(Ask < bbLower1)//buying
   {
      Alert("Price is bellow bbLower1, Sending buy order");
      double stopLossPrice = NormalizeDouble(bbLower2,Digits);
      double takeProfitPrice = NormalizeDouble(bbMid,Digits);;
      Alert("Entry Price = " + Ask);
      Alert("Stop Loss Price = " + stopLossPrice);
      Alert("Take Profit Price = " + takeProfitPrice);
      
      int orderID = OrderSend(NULL,OP_BUYLIMIT,0.01,Ask,10,stopLossPrice,takeProfitPrice);
      if(orderID < 0) Alert("order rejected. Order error: " + GetLastError());
   }
   else if(Bid > bbUpper1)//shorting
   {
      Alert("Price is above bbUpper1, Sending short order");
      double stopLossPrice = NormalizeDouble(bbUpper2,Digits);
      double takeProfitPrice = NormalizeDouble(bbMid,Digits);
      Alert("Entry Price = " + Bid);
      Alert("Stop Loss Price = " + stopLossPrice);
      Alert("Take Profit Price = " + takeProfitPrice);
	  
	  int orderID = OrderSend(NULL,OP_SELLLIMIT,0.01,Bid,10,stopLossPrice,takeProfitPrice);
	  if(orderID < 0) Alert("order rejected. Order error: " + GetLastError());
   }
  
  }
//+------------------------------------------------------------------+

//+------------------------------------------------------------------+
//|                                  #44 Position Sizing Methods.mq4 |
//|                                  Copyright 2024, MetaQuotes Ltd. |
//|                                             https://www.mql5.com |
//+------------------------------------------------------------------+
#property copyright "Copyright 2024, MetaQuotes Ltd."
#property link      "https://www.mql5.com"
#property version   "1.00"
#property strict
//+------------------------------------------------------------------+
//| Script program start function                                    |
//+------------------------------------------------------------------+
void OnStart()
  {
//---
// THE VIDEO JUST SHOWED HOW COMPLEX THE LOT CALCULATIONS
   
  }
//+------------------------------------------------------------------+


